Space Pixel

- A space ship 3D voxel game minecraft clone because.

- Build a ship from first principles, mining ore and processing it.
- Break orbit.
- Build an FTL drive (which are massive and require LOTS of power and rare materials)
- Explore the galaxy

Entity Hierarchy
* Galaxy -> Solar System -> Planets
* Load/unload solar system when far away.
* Load/unload planet when far away (replace with simple sphere).

Entities
* Voxel sphere generation with gravity.

Blocks
* Dirt, Stone, Bedrock, Iron Ore, Uranium Ore, Copper Ore
* Fabricator, Nuclear Reactor Core, Ion Drive, Airlock, Pipe, Wiring, Steel Plating, Steel, Pilot Seat

Ships
* Need a power core and engines connected with pipes. Uranium powers the fuel cells.
* Need a pilot seat, moves to an overview when sitting in pilot seat. Pilot seat connected to power core with wires.
* Engines determine speed, doesn't need to be realistic.

Fabricator
* Produces items from ore. Ore is placed inside, you select ship blocks to generate. Gradually generates blocks.

Shipyard
* A special type of block that levels off the 8x8 chunk surface. Allows you to produce an 8x8x8 ship until you break orbit.

Player
* Has a spacesuit with jetpack which only works in short bursts but has unlimited fuel. You'll need a ship to break orbit, but they are also affected by gravity.

* File format made up of two files:
	* A file 'map' of chunk position int hash -> file offset
	* File containing chunk data
		* Nearby chunks get plonked together!

TODO:

* Need to map from planet point to voxel point correctly.
* Add player jet pack
* Planet surface generation w/ multiple radii (1, 2, 4, 8 ???)
	* Add support for multiple block types
	* Gonna need voxel streaming to/from disk for large planets (UUUUGGGHHH)
	* 3D height noise
		* Need grass on top layer
		* Blocks with different textures on each face, differing per planet angle.
* Ship creation
	* Reactor core
	* Pilot seat
	* Engine
* Investigate voxel chipping (solid, wedge x 12 rotations, corner x 8)
	* Mining rules: solid -> wedge x 2 -> corner x 2
	* Nearest edge is chipped away.